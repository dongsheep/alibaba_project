server:
  port: 8080

spring:
  application:
    name: my-web
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848 #nacos中心地址
    sentinel:
      transport:
        dashboard: 127.0.0.1:8092 #sentinel控制台地址
        port: 8719 #默认8719，假如被占用了会自动从8719开始依次+1扫描。直至找到未被占用的端口
      datasource:
        ds1:
          nacos: #sentinel持久化，在nacos配置中心配置流控规则
            server-addr: 127.0.0.1:8848
            dataId: my-web-sentinel
            groupId: DEFAULT_GROUP
            data-type: json
            rule_type: flow
#在nacos配置中心进行json格式的配置
#            resource: 资源名称
#            limitApp: 来源应用
#            grade:阈值类型，0表示线程数，1表示QPS；
#            count：单机阈值；
#            strategy: 流控模式，0表示直接，1表示关联，2表示链路
#            controlBehavior:流控效果，0表示快速失败，1表示Warm Up,2表示排队等待；
#            clusterMode:是否集群。
    main:
      allow-bean-definition-overriding: true #在 Spring Boot 2.1 以及更高的版本增加该设定，因为 Spring Boot 默认调整了 Bean 定义覆盖行为
  redis:
    host: 127.0.0.1 #Redis服务器地址
    port: 6379 #Redis服务器连接端口
    password: foobared
    timeout: 10000 #连接超时时间（毫秒）

#指定日志配置文件，默认是log4j2-spring.xml，推荐使用log4j2.xml
logging:
  config: classpath:log4j2.xml
  level:
    com.alibaba.nacos.client.naming: warn

#dubbo配置
dubbo:
  registry:
#    address: nacos://127.0.0.1:8848 #注册中心地址
    address: spring-cloud://127.0.0.1 #挂载到Spring Cloud注册中心
    timeout: 10000 #指定注册到nacos上超时时间，ms
  protocol:
    name: dubbo #Dubbo的协议名称
    port: -1 #port为协议端口（ -1 表示自增端口，从 20880 开始）
  consumer:
    check: false #@DubboReference启动校验
    timeout: 1000
#    lazy: true
    retries: 0 #默认是2
  #    loadbalance: "leastactive"    # 最小活跃数负载均衡
#负载均衡策略
#RandomLoadBalance：随机，按权重设置随机概率
#ConsistentHashLoadBalance：一致性哈希算法
#LeastActiveLoadBalance：最小活跃数负载均衡
#RoundRobinLoadBalance：根据权重进轮训
  cloud:
    subscribed-services: user-service,order-service,mail-service

#服务监控
management:
  endpoints:
    web:
      exposure:
        include:
          - "*"
  endpoint:
    health:
      show-details: always
